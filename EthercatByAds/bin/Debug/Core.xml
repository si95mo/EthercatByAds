<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Core</name>
    </assembly>
    <members>
        <member name="T:Core.Failure">
            <summary>
            Describe a generic failure.
            See also <see cref="T:Core.IFailure"/>
            </summary>
        </member>
        <member name="F:Core.Failure.objectLock">
            <summary>
            The object lock
            </summary>
        </member>
        <member name="F:Core.Failure.ValueChangedHandler">
            <summary>
            The value changed <see cref="T:System.EventHandler"/>
            </summary>
        </member>
        <member name="P:Core.Failure.Description">
            <summary>
            The <see cref="T:Core.Failure"/> description
            </summary>
        </member>
        <member name="P:Core.Failure.Timestamp">
            <summary>
            The <see cref="T:Core.Failure"/> timestamp
            </summary>
        </member>
        <member name="P:Core.Failure.Default">
            <summary>
            The <see cref="T:Core.Failure"/> default value
            </summary>
        </member>
        <member name="M:Core.Failure.#ctor">
            <summary>
            Create a new instance of <see cref="T:Core.Failure"/>
            </summary>
        </member>
        <member name="M:Core.Failure.#ctor(System.String,System.DateTime)">
            <summary>
            Create a new instance of <see cref="T:Core.Failure"/>
            </summary>
            <param name="description">The description</param>
            <param name="timestamp">The timestamp</param>
        </member>
        <member name="M:Core.Failure.#ctor(System.String)">
            <summary>
            Create a new instance of <see cref="T:Core.Failure"/>
            </summary>
            <param name="description">The description</param>
        </member>
        <member name="M:Core.Failure.#ctor(System.Exception)">
            <summary>
            Create a new instance of <see cref="T:Core.Failure"/>
            </summary>
            <param name="ex">The <see cref="T:System.Exception"/> occurred</param>
        </member>
        <member name="E:Core.Failure.ValueChanged">
            <summary>
            The <see cref="T:System.EventHandler"/> for the
            value changed event
            </summary>
        </member>
        <member name="M:Core.Failure.OnValueChanged(Core.ValueChangedEventArgs)">
            <summary>
            On value changed event
            </summary>
            <param name="e">The <see cref="T:Core.ValueChangedEventArgs"/></param>
        </member>
        <member name="M:Core.Failure.Clear">
            <summary>
            Clear the <see cref="T:Core.Failure"/>,
            resetting it to default values
            </summary>
        </member>
        <member name="M:Core.Failure.ToString">
            <summary>
            Return a description of the object
            See also <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>The description of the object</returns>
        </member>
        <member name="T:Core.IConverter">
            <summary>
            Define a generic converter
            </summary>
        </member>
        <member name="M:Core.IConverter.Connect(Core.IProperty,Core.IProperty)">
            <summary>
            Connect two <see cref="T:Core.IProperty"/> in order to
            propagate the converted value
            </summary>
            <param name="sourceParameter">The source <see cref="T:Core.IProperty"/></param>
            <param name="destinationParameter">The destination <see cref="T:Core.IProperty"/></param>
        </member>
        <member name="T:Core.IFailure">
            <summary>
            Interface that describe a generic failure.
            </summary>
        </member>
        <member name="P:Core.IFailure.Description">
            <summary>
            The <see cref="T:Core.IFailure"/> description
            </summary>
        </member>
        <member name="P:Core.IFailure.Timestamp">
            <summary>
            The <see cref="T:Core.IFailure"/> timestamp;
            </summary>
        </member>
        <member name="P:Core.IFailure.Default">
            <summary>
            The <see cref="T:Core.IFailure"/> default value
            </summary>
        </member>
        <member name="M:Core.IFailure.Clear">
            <summary>
            Clear the <see cref="T:Core.IFailure"/>,
            resetting it to default values
            </summary>
        </member>
        <member name="T:Core.ValueChangedEventArgs">
            <summary>
            Handles the property value changed event.
            See also <see cref="T:System.EventArgs"/>
            </summary>
        </member>
        <member name="F:Core.ValueChangedEventArgs.OldValue">
            <summary>
            The old value
            </summary>
        </member>
        <member name="P:Core.ValueChangedEventArgs.OldValueAsDouble">
            <summary>
            The old value as <see cref="T:System.Double"/>
            </summary>
            <remarks>
            If the conversion throws an <see cref="T:System.Exception"/>, <see cref="F:System.Double.NaN"/> is returned
            </remarks>
        </member>
        <member name="P:Core.ValueChangedEventArgs.OldValueAsInt">
            <summary>
            The old value as <see cref="T:System.Int32"/>
            </summary>
            <remarks>
            If the conversion throws an <see cref="T:System.Exception"/>, <see cref="F:System.Int32.MinValue"/> is returned
            </remarks>
        </member>
        <member name="P:Core.ValueChangedEventArgs.OldValueAsBool">
            <summary>
            The old value as <see cref="T:System.Boolean"/>
            </summary>
            <remarks>
            If the conversion throws an <see cref="T:System.Exception"/>, <see langword="false"/> is returned
            </remarks>
        </member>
        <member name="P:Core.ValueChangedEventArgs.OldValueAsString">
            <summary>
            The old value as <see cref="T:System.String"/>
            </summary>
            <remarks>
            If the conversion throws an <see cref="T:System.Exception"/>, <see cref="F:System.String.Empty"/> is returned
            </remarks>
        </member>
        <member name="F:Core.ValueChangedEventArgs.NewValue">
            <summary>
            The new value
            </summary>
        </member>
        <member name="P:Core.ValueChangedEventArgs.NewValueAsDouble">
            <summary>
            The old value as <see cref="T:System.Double"/>
            </summary>
            <remarks>
            If the conversion throws an <see cref="T:System.Exception"/>, <see cref="F:System.Double.NaN"/> is returned
            </remarks>
        </member>
        <member name="P:Core.ValueChangedEventArgs.NewValueAsInt">
            <summary>
            The old value as <see cref="T:System.Int32"/>
            </summary>
            <remarks>
            If the conversion throws an <see cref="T:System.Exception"/>, <see cref="F:System.Int32.MinValue"/> is returned
            </remarks>
        </member>
        <member name="P:Core.ValueChangedEventArgs.NewValueAsBool">
            <summary>
            The old value as <see cref="T:System.Boolean"/>
            </summary>
            <remarks>
            If the conversion throws an <see cref="T:System.Exception"/>, <see langword="false"/> is returned
            </remarks>
        </member>
        <member name="P:Core.ValueChangedEventArgs.NewValueAsString">
            <summary>
            The old value as <see cref="T:System.String"/>
            </summary>
            <remarks>
            If the conversion throws an <see cref="T:System.Exception"/>, <see cref="F:System.String.Empty"/> is returned
            </remarks>
        </member>
        <member name="M:Core.ValueChangedEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Create a new instance of <see cref="T:Core.ValueChangedEventArgs"/>
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="T:Core.IProperty">
            <summary>
            Describe a generic property
            </summary>
        </member>
        <member name="P:Core.IProperty.Code">
            <summary>
            The <see cref="T:Core.IProperty"/> code
            </summary>
        </member>
        <member name="P:Core.IProperty.ValueAsObject">
            <summary>
            The <see cref="T:Core.IProperty"/> value as <see cref="T:System.Object"/>
            </summary>
        </member>
        <member name="P:Core.IProperty.Type">
            <summary>
            The <see cref="T:Core.IProperty"/> wrapped
            value <see cref="T:System.Type"/>
            </summary>
        </member>
        <member name="T:Core.IProperty`1">
            <summary>
            Describe a generic parameter
            with a defined type of value
            </summary>
            <typeparam name="T">The type of value</typeparam>
        </member>
        <member name="P:Core.IProperty`1.Value">
            <summary>
            The <see cref="T:Core.IProperty"/> value
            </summary>
        </member>
        <member name="E:Core.IProperty`1.ValueChanged">
            <summary>
            The <see cref="E:Core.IProperty`1.ValueChanged"/> event handler
            for the <see cref="P:Core.IProperty`1.Value"/> property
            </summary>
        </member>
        <member name="M:Core.IProperty`1.ConnectTo(Core.IProperty)">
            <summary>
            Connects an <see cref="T:Core.IProperty"/> to another
            in order to propagate its value
            </summary>
            <param name="property">The destination <see cref="T:Core.IProperty"/></param>
        </member>
        <member name="T:Core.NumericRepresentation">
            <summary>
            Define the numeric representation of variables
            </summary>
        </member>
        <member name="F:Core.NumericRepresentation.Byte">
            <summary>
            A <see cref="T:System.Byte"/> type of variable
            (8 bit unsigned integer value)
            </summary>
        </member>
        <member name="F:Core.NumericRepresentation.UInt16">
            <summary>
            An <see cref="T:System.UInt16"/> type of variable
            (16 bit unsigned integer value)
            </summary>
        </member>
        <member name="F:Core.NumericRepresentation.Int32">
            <summary>
            An <see cref="T:System.Int32"/> type of variable
            (32 bit integer value)
            </summary>
        </member>
        <member name="F:Core.NumericRepresentation.Single">
            <summary>
            A <see cref="T:System.Single"/> type of variable
            (single precision value - IEEE754 standard for 32 bit)
            </summary>
        </member>
        <member name="F:Core.NumericRepresentation.Double">
            <summary>
            A <see cref="T:System.Double"/> type of variable
            (double precision value - IEEE754 standard for 64 bit)
            </summary>
        </member>
        <member name="F:Core.NumericRepresentation.Boolean">
            <summary>
            A <see cref="T:System.Boolean"/> type of variable
            (<see langword="true"/> or <see langword="false"/> value)
            </summary>
        </member>
        <member name="F:Core.NumericRepresentation.Int16">
            <summary>
            A <see cref="T:System.Int16"/> type of variable
            (16 bit integer value)
            </summary>
        </member>
        <member name="T:Core.RepresentationBytes">
            <summary>
            The number of bytes relative to the
            numeric representation of the value in the memory buffer
            </summary>
        </member>
        <member name="F:Core.RepresentationBytes.One">
            <summary>
            One byte
            </summary>
        </member>
        <member name="F:Core.RepresentationBytes.Two">
            <summary>
            Two bytes
            </summary>
        </member>
        <member name="F:Core.RepresentationBytes.Four">
            <summary>
            Four bytes
            </summary>
        </member>
        <member name="F:Core.RepresentationBytes.Eight">
            <summary>
            Eight bytes
            </summary>
        </member>
    </members>
</doc>
