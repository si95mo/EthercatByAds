<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hardware</name>
    </assembly>
    <members>
        <member name="T:Hardware.DigitalInput">
            <summary>
            Implement a digital input channel.
            See also <see cref="T:Hardware.Channel`1"/> and <see cref="T:Hardware.IChannel`1"/>
            </summary>
        </member>
        <member name="P:Hardware.DigitalInput.Value">
            <summary>
            The <see cref="T:Hardware.AnalogInput"/> value;
            </summary>
        </member>
        <member name="M:Hardware.DigitalInput.#ctor">
            <summary>
            Create a new instance of <see cref="T:Hardware.DigitalInput"/>
            </summary>
        </member>
        <member name="M:Hardware.DigitalInput.#ctor(System.String)">
            <summary>
            Create a new instance of <see cref="T:Hardware.DigitalInput"/>
            </summary>
            <param name="code">The code</param>
        </member>
        <member name="T:Hardware.AnalogInput">
            <summary>
            Implement an analog input channel.
            See also <see cref="T:Hardware.Channel`1"/> and <see cref="T:Hardware.IChannel`1"/>
            </summary>
        </member>
        <member name="P:Hardware.AnalogInput.Value">
            <summary>
            The <see cref="T:Hardware.AnalogInput"/> value;
            </summary>
        </member>
        <member name="M:Hardware.AnalogInput.#ctor">
            <summary>
            Create a new instance of <see cref="T:Hardware.AnalogInput"/>
            </summary>
        </member>
        <member name="M:Hardware.AnalogInput.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new instance of <see cref="T:Hardware.AnalogInput"/>
            </summary>
            <param name="code">The code</param>
            <param name="format">The format</param>
            <param name="measureUnit">The measure unit</param>
        </member>
        <member name="T:Hardware.DigitalOutput">
            <summary>
            Implement a digital output channel.
            See also <see cref="T:Hardware.Channel`1"/> and <see cref="T:Hardware.IChannel`1"/>
            </summary>
        </member>
        <member name="M:Hardware.DigitalOutput.#ctor">
            <summary>
            Create a new instance of <see cref="T:Hardware.DigitalOutput"/>
            </summary>
        </member>
        <member name="M:Hardware.DigitalOutput.#ctor(System.String)">
            <summary>
            Create a new instance of <see cref="T:Hardware.DigitalOutput"/>
            </summary>
            <param name="code">The code</param>
        </member>
        <member name="T:Hardware.AnalogOutput">
            <summary>
            Implement an analog input channel.
            See also <see cref="T:Hardware.Channel`1"/> and <see cref="T:Hardware.IChannel`1"/>
            </summary>
        </member>
        <member name="M:Hardware.AnalogOutput.#ctor">
            <summary>
            Create a new instance of <see cref="T:Hardware.AnalogOutput"/>
            </summary>
        </member>
        <member name="M:Hardware.AnalogOutput.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new instance of <see cref="T:Hardware.AnalogOutput"/>
            </summary>
            <param name="code">The code</param>
            <param name="format">The format</param>
            <param name="measureUnit">The measure unit</param>
        </member>
        <member name="T:Hardware.Channel`1">
            <summary>
            Describe a generic channel.
            See also <see cref="T:Hardware.IChannel`1"/>
            </summary>
            <typeparam name="T">The type of the <see cref="T:Hardware.Channel`1"/></typeparam>
        </member>
        <member name="F:Hardware.Channel`1.code">
            <summary>
            The code
            </summary>
        </member>
        <member name="F:Hardware.Channel`1.value">
            <summary>
            The value
            </summary>
        </member>
        <member name="F:Hardware.Channel`1.measureUnit">
            <summary>
            The measure unit
            </summary>
        </member>
        <member name="F:Hardware.Channel`1.format">
            <summary>
            The format
            </summary>
        </member>
        <member name="F:Hardware.Channel`1.subscribers">
            <summary>
            The subscribers
            </summary>
        </member>
        <member name="F:Hardware.Channel`1.objectLock">
            <summary>
            The object lock
            </summary>
        </member>
        <member name="F:Hardware.Channel`1.ValueChangedHandler">
            <summary>
            The value changed <see cref="T:System.EventHandler"/>
            </summary>
        </member>
        <member name="P:Hardware.Channel`1.Type">
            <summary>
            The <see cref="P:Hardware.Channel`1.Type"/>
            </summary>
        </member>
        <member name="P:Hardware.Channel`1.Tags">
            <summary>
            The tags
            </summary>
        </member>
        <member name="M:Hardware.Channel`1.#ctor">
            <summary>
            Initialize the class attributes with
            default parameters
            </summary>
        </member>
        <member name="M:Hardware.Channel`1.#ctor(System.String)">
            <summary>
            Initialize the class attributes with
            default parameters
            </summary>
            <param name="code">The code</param>
        </member>
        <member name="M:Hardware.Channel`1.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize the class attributes
            </summary>
            <param name="code">The code</param>
            <param name="measureUnit">The measure unit</param>
            <param name="format">The format</param>
        </member>
        <member name="M:Hardware.Channel`1.#ctor(System.String,System.String,System.String,Hardware.IResource)">
            <summary>
            Initialize the class attributes
            </summary>
            <param name="code">The code</param>
            <param name="measureUnit">The measure unit</param>
            <param name="format">The format</param>
            <param name="resource">The <see cref="T:Hardware.IResource"/></param>
        </member>
        <member name="E:Hardware.Channel`1.ValueChanged">
            <summary>
            The <see cref="E:Hardware.Channel`1.ValueChanged"/> event handler
            for the <see cref="P:Hardware.Channel`1.Value"/> property
            </summary>
        </member>
        <member name="P:Hardware.Channel`1.Code">
            <summary>
            The <see cref="T:Hardware.Channel`1"/> code
            </summary>
        </member>
        <member name="P:Hardware.Channel`1.Value">
            <summary>
            The <see cref="T:Hardware.Channel`1"/> value
            </summary>
        </member>
        <member name="M:Hardware.Channel`1.UpdateValue(`0)">
            <summary>
            Update the <see cref="T:Hardware.Channel`1"/> <see cref="P:Hardware.Channel`1.Value"/>
            </summary>
            <param name="value">The new value</param>
            <remarks>This method also invoke the <see cref="M:Hardware.Channel`1.OnValueChanged(Core.ValueChangedEventArgs)"/> handler if needed</remarks>
        </member>
        <member name="P:Hardware.Channel`1.ValueAsObject">
            <summary>
            The <see cref="T:Hardware.Channel`1"/> value as <see cref="T:System.Object"/>
            </summary>
        </member>
        <member name="P:Hardware.Channel`1.MeasureUnit">
            <summary>
            The <see cref="T:Hardware.Channel`1"/> measure unit
            </summary>
        </member>
        <member name="P:Hardware.Channel`1.Format">
            <summary>
            The <see cref="T:Hardware.Channel`1"/> format
            </summary>
        </member>
        <member name="M:Hardware.Channel`1.OnValueChanged(Core.ValueChangedEventArgs)">
            <summary>
            On value changed event
            </summary>
            <param name="e">The <see cref="T:Core.ValueChangedEventArgs"/></param>
        </member>
        <member name="M:Hardware.Channel`1.ConnectTo(Core.IProperty)">
            <summary>
            Connects an <see cref="T:Hardware.IChannel"/> to another
            in order to propagate its value;
            </summary>
            <param name="channel">The destination <see cref="T:Hardware.IChannel"/></param>
        </member>
        <member name="M:Hardware.Channel`1.ConnectTo(Core.IProperty,Core.IConverter)">
            <summary>
            Connects an <see cref="T:Hardware.IChannel"/> to another
            in order to propagate its value converted.
            See also <see cref="M:Hardware.Channel`1.ConnectTo(Core.IProperty)"/>
            </summary>
            <param name="channel">The destination <see cref="T:Hardware.IChannel"/></param>
            <param name="converter">The <see cref="T:Core.Converters.IConverter`2"/></param>
        </member>
        <member name="M:Hardware.Channel`1.PropagateValues(System.Object,Core.ValueChangedEventArgs)">
            <summary>
            <see cref="E:Hardware.Channel`1.ValueChanged"/> event handler that manages
            the propagation of the values to subscribers.
            See <see cref="M:Hardware.Channel`1.ConnectTo(Core.IProperty)"/>
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The <see cref="T:Core.ValueChangedEventArgs"/></param>
        </member>
        <member name="M:Hardware.Channel`1.ToString">
            <summary>
            Give a textual description of the <see cref="T:Hardware.Channel`1"/>
            </summary>
            <returns>The textual description</returns>
        </member>
        <member name="T:Hardware.IAnalogInput">
            <summary>
            Define a generic analog input channel
            </summary>
        </member>
        <member name="T:Hardware.IAnalogOutput">
            <summary>
            Define a generic analog output
            </summary>
        </member>
        <member name="T:Hardware.IChannel">
            <summary>
            Describe a generic (hardware) channel
            </summary>
        </member>
        <member name="P:Hardware.IChannel.WriteEnable">
            <summary>
            Define an <see cref="T:Core.Conditions.ICondition"/> that enable the <see cref="T:Hardware.IChannel"/> write
            </summary>
        </member>
        <member name="M:Hardware.IChannel.ConnectTo(Core.IProperty,Core.IConverter)">
            <summary>
            Connect a <see cref="T:Core.IProperty"/> to propagate the value
            </summary>
            <param name="property">The <see cref="T:Core.IProperty"/> to connect</param>
            <param name="converter">The <see cref="T:Core.IConverter"/></param>
        </member>
        <member name="M:Hardware.IChannel.ConnectTo(Core.IProperty)">
            <summary>
            Connect a <see cref="T:Core.IProperty"/> to propagate the value
            </summary>
            <param name="property">The <see cref="T:Core.IProperty"/> to connect</param>
        </member>
        <member name="E:Hardware.IChannel.ValueChanged">
            <summary>
            The value changed event. See <see cref="T:Core.ValueChangedEventArgs"/>
            </summary>
        </member>
        <member name="T:Hardware.IChannel`1">
            <summary>
            Describe a generic (hardware) channel
            with a defined type of value
            </summary>
            <typeparam name="T">The type of value</typeparam>
        </member>
        <member name="P:Hardware.IChannel`1.Value">
            <summary>
            The <see cref="T:Hardware.IChannel"/> code
            </summary>
        </member>
        <member name="T:Hardware.IDigitalInput">
            <summary>
            Define a generic digital input
            </summary>
        </member>
        <member name="T:Hardware.IDigitalOutput">
            <summary>
            Define a generic digital output
            </summary>
        </member>
        <member name="T:Hardware.ResourceStatus">
            <summary>
            Define the <see cref="T:Hardware.IResource"/> status
            </summary>
        </member>
        <member name="F:Hardware.ResourceStatus.Stopped">
            <summary>
            The <see cref="T:Hardware.IResource"/> is stopped
            </summary>
        </member>
        <member name="F:Hardware.ResourceStatus.Starting">
            <summary>
            The <see cref="T:Hardware.IResource"/> is starting
            </summary>
        </member>
        <member name="F:Hardware.ResourceStatus.Executing">
            <summary>
            The <see cref="T:Hardware.IResource"/> is executing
            </summary>
        </member>
        <member name="F:Hardware.ResourceStatus.Stopping">
            <summary>
            The <see cref="T:Hardware.IResource"/> is stopping
            </summary>
        </member>
        <member name="F:Hardware.ResourceStatus.Failure">
            <summary>
            The <see cref="T:Hardware.IResource"/> is in failure
            </summary>
        </member>
        <member name="T:Hardware.IResource">
            <summary>
            Describe a generic hardware resource
            </summary>
        </member>
        <member name="P:Hardware.IResource.IsOpen">
            <summary>
            The <see cref="T:Hardware.IResource"/> operating state
            </summary>
        </member>
        <member name="P:Hardware.IResource.Channels">
            <summary>
            The <see cref="T:Hardware.IResource"/> <see cref="T:Core.DataStructures.Bag`1"/>
            of <see cref="T:Hardware.IChannel"/>
            </summary>
        </member>
        <member name="P:Hardware.IResource.Status">
            <summary>
            The <see cref="T:Hardware.IResource"/> status
            </summary>
        </member>
        <member name="P:Hardware.IResource.LastFailure">
            <summary>
            The last <see cref="T:Core.IFailure"/>
            </summary>
        </member>
        <member name="M:Hardware.IResource.Start">
            <summary>
            Start the <see cref="T:Hardware.IResource"/>
            </summary>
        </member>
        <member name="M:Hardware.IResource.Stop">
            <summary>
            Stop the <see cref="T:Hardware.IResource"/>
            </summary>
        </member>
        <member name="M:Hardware.IResource.Restart">
            <summary>
            Restart the <see cref="T:Hardware.IResource"/>
            </summary>
        </member>
        <member name="T:Hardware.MultiSampleAnalogInput">
            <summary>
            Implement a multi sample analo input
            </summary>
        </member>
        <member name="P:Hardware.MultiSampleAnalogInput.Value">
            <summary>
            The <see cref="T:Hardware.Channel`1"/> value
            </summary>
        </member>
        <member name="M:Hardware.MultiSampleAnalogInput.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new instance of <see cref="T:Hardware.MultiSampleAnalogInput"/>
            </summary>
            <param name="code">The code</param>
            <param name="measureUnit">The measure unit</param>
            <param name="format">The format</param>
        </member>
        <member name="M:Hardware.MultiSampleAnalogInput.#ctor">
            <summary>
            Create a new instance of <see cref="T:Hardware.MultiSampleAnalogInput"/>
            </summary>
        </member>
        <member name="M:Hardware.MultiSampleAnalogInput.ToString">
            <summary>
            Give a textual description of the <see cref="T:Hardware.Channel`1"/>
            </summary>
            <returns>The textual description</returns>
        </member>
        <member name="T:Hardware.Resource">
            <summary>
            Describe a generic hardware resource. <br/>
            See also <see cref="T:Hardware.IResource"/>
            </summary>
        </member>
        <member name="F:Hardware.Resource.code">
            <summary>
            The code
            </summary>
        </member>
        <member name="F:Hardware.Resource.status">
            <summary>
            The status
            </summary>
        </member>
        <member name="F:Hardware.Resource.failure">
            <summary>
            The failure
            </summary>
        </member>
        <member name="F:Hardware.Resource.channels">
            <summary>
            The channels
            </summary>
        </member>
        <member name="M:Hardware.Resource.#ctor(System.String)">
            <summary>
            Create a new instance of <see cref="T:Hardware.Resource"/>
            </summary>
            <param name="code"></param>
        </member>
        <member name="P:Hardware.Resource.Status">
            <summary>
            The <see cref="T:Hardware.Resource"/> status
            </summary>
        </member>
        <member name="P:Hardware.Resource.LastFailure">
            <summary>
            The <see cref="T:Hardware.Resource"/> last <see cref="T:Core.IFailure"/>
            </summary>
        </member>
        <member name="P:Hardware.Resource.Type">
            <summary>
            The <see cref="T:Hardware.Resource"/> <see cref="T:System.Type"/>
            </summary>
        </member>
        <member name="P:Hardware.Resource.ValueAsObject">
            <summary>
            The <see cref="T:Hardware.Resource"/> value (<see cref="P:Hardware.Resource.Code"/>) as <see cref="T:System.Object"/>
            </summary>
        </member>
        <member name="P:Hardware.Resource.IsOpen">
            <summary>
            The <see cref="T:Hardware.Resource"/> open status
            </summary>
        </member>
        <member name="P:Hardware.Resource.Channels">
            <summary>
            The <see cref="T:Hardware.Resource"/> collection of
            <see cref="T:Hardware.IChannel"/>
            </summary>
        </member>
        <member name="P:Hardware.Resource.Code">
            <summary>
            The <see cref="T:Hardware.Resource"/> code
            </summary>
        </member>
        <member name="M:Hardware.Resource.Start">
            <summary>
            Start the <see cref="T:Hardware.Resource"/>
            </summary>
        </member>
        <member name="M:Hardware.Resource.Stop">
            <summary>
            Stop the <see cref="T:Hardware.Resource"/>
            </summary>
        </member>
        <member name="M:Hardware.Resource.Restart">
            <summary>
            Restart the <see cref="T:Hardware.Resource"/>
            </summary>
        </member>
        <member name="M:Hardware.Resource.HandleException(System.Exception)">
            <summary>
            Handle the operations to perform in case of an <see cref="T:System.Exception"/>
            </summary>
            <remarks>
            This method should be called inside each try-catch block in each concrete class
            that inherits from <see cref="T:Hardware.Resource"/>. <br/>
            This method set the <see cref="P:Hardware.Resource.Status"/> to <see cref="F:Hardware.ResourceStatus.Failure"/>,
            set the <see cref="P:Hardware.Resource.LastFailure"/> accordingly and log the <paramref name="ex"/>
            </remarks>
            <param name="ex">The <see cref="T:System.Exception"/> occurred</param>
        </member>
        <member name="M:Hardware.Resource.HandleException(System.String)">
            <summary>
            Handle the operations to perform in case of a generic <see cref="T:Hardware.Resource"/> failure
            </summary>
            <remarks>
            This method should be called inside each if-else block in each concrete class
            that inherits from <see cref="T:Hardware.Resource"/>. <br/>
            This method set the <see cref="P:Hardware.Resource.Status"/> to <see cref="F:Hardware.ResourceStatus.Failure"/>,
            set the <see cref="P:Hardware.Resource.LastFailure"/> accordingly and log the <paramref name="message"/>
            </remarks>
            <param name="message">The error message</param>
        </member>
    </members>
</doc>
